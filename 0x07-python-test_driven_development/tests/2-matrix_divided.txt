==============================
Testing the Matrix divider
==============================

	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
	>>> t = (
	...	(1, 2, 3),
	...	(4, 5, 6)
	... )
	>>> print(matrix_divided(t, 3)) #doctest: +REPORT_NDIFF
	Traceback (most recent call last):
		...
	    raise TypeError('the matrix must be a matrix (list of lists) of integers/floats')
	TypeError: the matrix must be a matrix (list of lists) of integers/floats

==============================
With a square matrix
==============================

	>>> matrix = [
	...	[1, 2, 3],
	...	[4, 5, 6]
	... ]
	>>> print(matrix_divided(matrix, 3))
	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

==============================
With div == 0
==============================
	>>> div = 0
	>>> print(matrix_divided(matrix, div)) #doctest: +REPORT_NDIFF
	Traceback (most recent call last):
		...
	    raise ZeroDivisionError('division by zero')
	ZeroDivisionError: division by zero

==============================
A non-square matrix
==============================

	>>> matrix2 = [
	...	[1, 2, 3, 4],
	...	[5, 6, 7]
	... ]
	>>>
	>>> print(matrix_divided(matrix2, 7)) #doctest: +REPORT_NDIFF
	Traceback (most recent call last):
		...
	    raise TypeError('Each row of the matrix must have the same size')
	TypeError: Each row of the matrix must have the same size
